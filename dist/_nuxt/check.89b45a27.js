import{a as m,o as a,b as c,e as v,f as n,r as p,h as f,i as M,j as V,c as x}from"./entry.8fa913ab.js";var r=(t=>(t.Personal="PERSONAL",t.Health="HEALTH",t.General="GENERAL",t.Result="RESULT",t.None="NONE",t))(r||{});const C={name:"VCheckStateHandler",props:{nextForm:{type:String,default:""},previousForm:{type:String,default:""},hasPrevious:{type:Boolean,default:!0},nextModelValue:{type:String,default:""},previousModelValue:{type:String,default:""}},emits:["update:nextModelValue","update:previousModelValue"]};function _(t,e,d,h,o,l){return a(),c("div",null,[d.hasPrevious?(a(),c("input",{key:0,type:"button",value:"Previous",class:"previous action-button-previous",onClick:e[0]||(e[0]=u=>t.$emit("update:previousModelValue",d.previousForm))})):v("",!0),n("input",{type:"button",value:"Next",class:"next action-button bg-primary",onClick:e[1]||(e[1]=u=>t.$emit("update:nextModelValue",d.nextForm))})])}const k=m(C,[["render",_]]),F={name:"VCheckHealthForm",components:{VCheckStateHandler:k},props:{nextModelValue:{type:String,default:""},previousModelValue:{type:String,default:""}},emits:["update:nextModelValue","update:previousModelValue"],data(){return{nextChildModelValue:"",previousChildModelValue:""}},computed:{nextForm(){return r.Result},previousForm(){return r.General}},watch:{nextChildModelValue(t){this.$emit("update:nextModelValue",t)},previousChildModelValue(t){this.$emit("update:previousModelValue",t)}}},H=M('<h2 class="fs-title">Health Data</h2><h3 class="fs-subtitle">Your current health</h3><div class="row"><div class="col order-0"><div class="input-group"><span class="input-group-addon"><input id="HighBP" type="checkbox" name="High Blood Pressure" class="form-check-input" required></span><span class="input-group-addon"><label class="form-check-label" for="HighBP">Do you have a high blood pressure (confirmed by a doctor)?</label></span></div><div class="input-group"><span class="input-group-addon"><input id="HighChol" type="checkbox" name="High Cholesterol" class="form-check-input" required></span><span class="input-group-addon"><label class="form-check-label" for="HighChol">Have you EVER been told by a doctor, nurse or other health professional that your blood cholesterol is high?</label></span></div><div class="input-group"><span class="input-group-addon"><input id="Smoker" type="checkbox" class="form-check-input" name="Smoker" required></span><span class="input-group-addon"><label class="form-check-label" for="Smoker">Have you smoked at least 100 cigarettes in your entire life? [Note: 5 packs = 100 cigarettes]</label></span></div><div class="input-group"><span class="input-group-addon"><input id="Stroke" type="checkbox" class="form-check-input" name="Stroke" required></span><span class="input-group-addon"><label class="form-check-label" for="Stroke">Have you ever had a stroke?</label></span></div><div class="input-group"><span class="input-group-addon"><input id="Diabetes" type="checkbox" class="form-check-input" name="Diabetes" required></span><span class="input-group-addon"><label class="form-check-label" for="Diabetes">you have diabetes</label></span></div><div class="input-group"><span class="input-group-addon"><input id="PhysActivity" type="checkbox" name="Physical Activity" class="form-check-input" required></span><span class="input-group-addon"><label class="form-check-label" for="PhysActivity">Adults who reported doing physical activity or exercise during the past 30 days other than their regular job</label></span></div><div class="input-group"><span class="input-group-addon"><input id="Fruits" type="checkbox" class="form-check-input" name="Fruits" required></span><span class="input-group-addon"><label class="form-check-label" for="Fruits">Consume Fruit 1 or more times per day</label></span></div><div class="input-group"><span class="input-group-addon"><input id="Veggies" type="checkbox" class="form-check-input" name="Veggies" required></span><span class="input-group-addon"><label class="form-check-label" for="Veggies">Consume Vegetables 1 or more times per day</label></span></div><div class="input-group"><span class="input-group-addon"><input id="DiffWalk" type="checkbox" class="form-check-input" name="Difficulty stairs" required></span><span class="input-group-addon"><label for="DiffWalk">Do you have serious difficulty walking or climbing stairs?</label></span></div><div class="form-check"><label class="form-check-label" for="Sex">Indicate sex of respondent</label><input id="Sex" type="checkbox" class="form-check-input" name="Difficulty stairs" required></div></div><div class="col order-1"><label for="GenHlth">Would you say that in general your health is</label><input id="GenHlth" type="number" name="General Health" required><label for="MentHlth">Now thinking about your mental health, which includes stress, depression, and problems with emotions, for how many days during the past 30 days was your mental health not good?</label><input id="MentHlth" type="number" name="Mental Health" required><label for="PhysHlth">Now thinking about your physical health, which includes physical illness and injury, for how many days during the past 30 days was your physical health not good?</label><input id="PhysHlth" type="number" name="Physical Health" required></div></div>',3);function N(t,e,d,h,o,l){const u=p("VCheckStateHandler");return a(),c("fieldset",null,[H,f(u,{"next-model-value":o.nextChildModelValue,"onUpdate:next-model-value":e[0]||(e[0]=s=>o.nextChildModelValue=s),"previous-model-value":o.previousChildModelValue,"onUpdate:previous-model-value":e[1]||(e[1]=s=>o.previousChildModelValue=s),"next-form":l.nextForm,"previous-form":l.previousForm},null,8,["next-model-value","previous-model-value","next-form","previous-form"])])}const P=m(F,[["render",N]]),$={name:"VCheckPersonalForm",components:{VCheckStateHandler:k},props:{firstNameModelValue:{type:String,default:""},lastNameModelValue:{type:String,default:""},emailAddressModelValue:{type:String,default:""},nextModelValue:{type:String,default:""}},emits:["update:firstNameModelValue","update:lastNameModelValue","update:emailAddressModelValue","update:nextModelValue"],data(){return{nextChildModelValue:""}},computed:{nextForm(){return r.General}},watch:{nextChildModelValue(t){this.$emit("update:nextModelValue",t)}}},S=n("h2",{class:"fs-title"},"Personal Details",-1),R=n("h3",{class:"fs-subtitle"},"Tell us something more about you",-1);function q(t,e,d,h,o,l){const u=p("VCheckStateHandler");return a(),c("fieldset",null,[S,R,n("input",{type:"text",placeholder:"First Name",required:"",onInput:e[0]||(e[0]=s=>t.$emit("update:firstNameModelValue",s.target.value))},null,32),n("input",{type:"text",placeholder:"Last Name",required:"",onInput:e[1]||(e[1]=s=>t.$emit("update:lastNameModelValue",s.target.value))},null,32),n("input",{type:"email",placeholder:"Email",required:"",onInput:e[2]||(e[2]=s=>t.$emit("update:emailAddressModelValue",s.target.value))},null,32),f(u,{"next-model-value":o.nextChildModelValue,"onUpdate:next-model-value":e[3]||(e[3]=s=>o.nextChildModelValue=s),"has-previous":!1,"next-form":l.nextForm},null,8,["next-model-value","next-form"])])}const B=m($,[["render",q]]),G={name:"VCheckProgressBar",props:{currentForm:{type:String,default:""}},computed:{isHealth(){return this.currentForm===r.Health||this.currentForm===r.Result?"active":""},isGeneral(){return this.currentForm===r.General||this.currentForm===r.Health||this.currentForm===r.Result?"active":""},isResult(){return this.currentForm===r.Result?"active":""}}},D={id:"progressbar"},w=n("li",{class:"active"},"Personal Details",-1);function A(t,e,d,h,o,l){return a(),c("ul",D,[w,n("li",{class:V(l.isGeneral)},"General Info",2),n("li",{class:V(l.isHealth)},"Health Details",2),n("li",{class:V(l.isResult)},"Result",2)])}const I=m(G,[["render",A]]),U={name:"VCheckResultForm"},E=n("h2",{class:"fs-title"},"Results",-1),W=n("h3",{class:"fs-subtitle"},"Your current health",-1),L=[E,W];function j(t,e,d,h,o,l){return a(),c("fieldset",null,L)}const T=m(U,[["render",j]]),O={name:"VCheckGeneralInfo",components:{VCheckStateHandler:k},props:{nextModelValue:{type:String,default:""},previousModelValue:{type:String,default:""}},emits:["update:nextModelValue","update:previousModelValue"],data(){return{nextChildModelValue:"",previousChildModelValue:""}},computed:{nextForm(){return r.Health},previousForm(){return r.Personal}},watch:{nextChildModelValue(t){this.$emit("update:nextModelValue",t)},previousChildModelValue(t){this.$emit("update:previousModelValue",t)}}},Y=n("label",{for:"Age"},"Age",-1),z=n("input",{id:"Age",type:"number",name:"Age",required:""},null,-1),J=n("label",{for:"BMI"},"Body Mass Index (BMI)",-1),K=n("input",{id:"BMI",type:"number",name:"BMI (Body Mass Index)",required:""},null,-1);function Q(t,e,d,h,o,l){const u=p("VCheckStateHandler");return a(),c("fieldset",null,[Y,z,J,K,f(u,{"next-model-value":o.nextChildModelValue,"onUpdate:next-model-value":e[0]||(e[0]=s=>o.nextChildModelValue=s),"previous-model-value":o.previousChildModelValue,"onUpdate:previous-model-value":e[1]||(e[1]=s=>o.previousChildModelValue=s),"next-form":l.nextForm,"previous-form":l.previousForm},null,8,["next-model-value","previous-model-value","next-form","previous-form"])])}const X=m(O,[["render",Q]]),Z={name:"VCheckForm",components:{VCheckGeneralInfo:X,VCheckResultForm:T,VCheckProgressBar:I,VCheckHealthForm:P,VCheckPersonalForm:B},data(){return{formData:{personal:{},health:{}},currentForm:r.Personal,nextModel:"",previousModel:""}},computed:{isPersonalFormName(){return r.Personal===this.currentForm},isHealthFormName(){return r.Health===this.currentForm},isGeneralFormName(){return r.General===this.currentForm},isResultFormName(){return r.Result===this.currentForm}},mounted(){this.$watch("nextModel",this.nextModelWatcher),this.$watch("previousModel",this.previousModelWatcher)},methods:{nextModelWatcher(t){r.None!==t&&(this.currentForm=t)},previousModelWatcher(t){this.currentForm=t,this.nextModel=r.None}}},ee={id:"msform"};function te(t,e,d,h,o,l){const u=p("VCheckProgressBar"),s=p("VCheckPersonalForm"),y=p("VCheckGeneralInfo"),g=p("VCheckHealthForm"),b=p("VCheckResultForm");return a(),c("div",null,[n("form",ee,[f(u,{"current-form":o.currentForm,"onUpdate:current-form":e[0]||(e[0]=i=>o.currentForm=i)},null,8,["current-form"]),l.isPersonalFormName?(a(),x(s,{key:0,"next-model-value":o.nextModel,"onUpdate:next-model-value":e[1]||(e[1]=i=>o.nextModel=i),"first-name-model-value":o.formData.personal.firstName,"last-name-model-value":o.formData.personal.lastName,"email-address-model-value":o.formData.personal.emailAddress},null,8,["next-model-value","first-name-model-value","last-name-model-value","email-address-model-value"])):v("",!0),l.isGeneralFormName?(a(),x(y,{key:1,"next-model-value":o.nextModel,"onUpdate:next-model-value":e[2]||(e[2]=i=>o.nextModel=i),"previous-model-value":o.previousModel,"onUpdate:previous-model-value":e[3]||(e[3]=i=>o.previousModel=i)},null,8,["next-model-value","previous-model-value"])):v("",!0),l.isHealthFormName?(a(),x(g,{key:2,"next-model-value":o.nextModel,"onUpdate:next-model-value":e[4]||(e[4]=i=>o.nextModel=i),"previous-model-value":o.previousModel,"onUpdate:previous-model-value":e[5]||(e[5]=i=>o.previousModel=i)},null,8,["next-model-value","previous-model-value"])):v("",!0),l.isResultFormName?(a(),x(b,{key:3})):v("",!0)])])}const oe=m(Z,[["render",te]]),le={name:"CheckPage",components:{VCheckForm:oe}},re={class:"container"};function se(t,e,d,h,o,l){const u=p("VCheckForm");return a(),c("div",re,[f(u)])}const ae=m(le,[["render",se]]);export{ae as default};
